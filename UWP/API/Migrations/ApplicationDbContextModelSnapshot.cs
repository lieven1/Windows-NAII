// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Models.Reis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naam");

                    b.HasKey("Id");

                    b.ToTable("Reizen");

                    b.HasData(
                        new { Id = 1, Naam = "Barcelona" }
                    );
                });

            modelBuilder.Entity("API.Models.Verplaatsing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AankomstTijd");

                    b.Property<string>("Bestemming");

                    b.Property<int>("ReisId");

                    b.Property<string>("VertrekPlaats");

                    b.Property<DateTime>("VertrekTijd");

                    b.HasKey("Id");

                    b.HasIndex("ReisId");

                    b.ToTable("Verplaatsingen");

                    b.HasData(
                        new { Id = 1, AankomstTijd = new DateTime(2020, 12, 15, 15, 0, 0, 0, DateTimeKind.Unspecified), Bestemming = "Barcelona", ReisId = 1, VertrekPlaats = "Gent", VertrekTijd = new DateTime(2020, 12, 15, 12, 30, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 2, AankomstTijd = new DateTime(2020, 12, 20, 18, 0, 0, 0, DateTimeKind.Unspecified), Bestemming = "Gent", ReisId = 1, VertrekPlaats = "Barcelona", VertrekTijd = new DateTime(2020, 12, 20, 16, 30, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("API.Models.Verplaatsing", b =>
                {
                    b.HasOne("API.Models.Reis")
                        .WithMany("Verplaatsingen")
                        .HasForeignKey("ReisId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
